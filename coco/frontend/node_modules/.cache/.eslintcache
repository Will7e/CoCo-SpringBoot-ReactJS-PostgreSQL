[{"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\index.js":"1","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\App.js":"2","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\BoardUser.js":"4","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Home.js":"5","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Login.js":"6","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Register.js":"7","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Profile.js":"8","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\auth.service.js":"9","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\common\\EventBus.js":"10","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\user.service.js":"11","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\auth-header.js":"12","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Navbar.js":"13","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\TypeText.js":"14","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\UserList.js":"15","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\BoardUserFriends.js":"16"},{"size":494,"mtime":1650383148894,"results":"17","hashOfConfig":"18"},{"size":1098,"mtime":1650501186904,"results":"19","hashOfConfig":"18"},{"size":5227,"mtime":1649576976070,"results":"20","hashOfConfig":"18"},{"size":9355,"mtime":1650505606610,"results":"21","hashOfConfig":"18"},{"size":491,"mtime":1650417050752,"results":"22","hashOfConfig":"18"},{"size":3786,"mtime":1650136071524,"results":"23","hashOfConfig":"18"},{"size":5857,"mtime":1649982020113,"results":"24","hashOfConfig":"18"},{"size":12919,"mtime":1650455634651,"results":"25","hashOfConfig":"18"},{"size":849,"mtime":1650023812038,"results":"26","hashOfConfig":"18"},{"size":340,"mtime":1649576976063,"results":"27","hashOfConfig":"18"},{"size":2505,"mtime":1650505924594,"results":"28","hashOfConfig":"18"},{"size":260,"mtime":1650238927201,"results":"29","hashOfConfig":"18"},{"size":2602,"mtime":1650501149708,"results":"30","hashOfConfig":"18"},{"size":203,"mtime":1650055879731,"results":"31","hashOfConfig":"18"},{"size":2181,"mtime":1650505798898,"results":"32","hashOfConfig":"18"},{"size":2121,"mtime":1650505964784,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1ylix9f",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\index.js",["71"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Avatar, { ConfigProvider } from \"react-avatar\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ConfigProvider\r\n      colors={[\"black\", \"lightgrey\", \"PAPAYAWHIP\", \"DARKOLIVEGREEN\"]}\r\n    >\r\n      <App />\r\n    </ConfigProvider>\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n",["72","73"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\App.js",["74"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\BoardUser.js",["75","76","77","78","79","80","81","82"],"import React, { useState, useEffect } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserList from \"./UserList\";\r\nimport \"./UserList.css\";\r\n\r\nconst BoardUser = () => {\r\n  const [content, setContent] = useState([]);\r\n  const currentUser = AuthService.getCurrentUser();\r\n\r\n  const printUserList = (i) => {\r\n    if (i === 1) {\r\n      UserService.getUsersBySkill().then(\r\n        (response) => {\r\n          setContent(response.data);\r\n          setContent((content) =>\r\n            content.filter((x) => x.email != currentUser.email)\r\n          );\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setContent(_content);\r\n\r\n          if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (i === 2) {\r\n      UserService.getUsersBySkillJS().then(\r\n        (response) => {\r\n          setContent(response.data);\r\n          setContent((content) =>\r\n            content.filter((x) => x.email != currentUser.email)\r\n          );\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setContent(_content);\r\n\r\n          if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (i === 3) {\r\n      UserService.getUsersBySkillPy().then(\r\n        (response) => {\r\n          setContent(response.data);\r\n          setContent((content) =>\r\n            content.filter((x) => x.email != currentUser.email)\r\n          );\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setContent(_content);\r\n\r\n          if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (i === 4) {\r\n      UserService.getUsersBySkillHtlmCss().then(\r\n        (response) => {\r\n          setContent(response.data);\r\n          setContent((content) =>\r\n            content.filter((x) => x.email != currentUser.email)\r\n          );\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setContent(_content);\r\n\r\n          if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (i === 5) {\r\n      UserService.getUsersBySkillCS().then(\r\n        (response) => {\r\n          setContent(response.data);\r\n          setContent((content) =>\r\n            content.filter((x) => x.email != currentUser.email)\r\n          );\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setContent(_content);\r\n\r\n          if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (i === 6) {\r\n      UserService.getUsersBySkillSQL().then(\r\n        (response) => {\r\n          setContent(response.data);\r\n          setContent((content) =>\r\n            content.filter((x) => x.email != currentUser.email)\r\n          );\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setContent(_content);\r\n\r\n          if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (i === 7) {\r\n      UserService.getAllUser().then(\r\n        (response) => {\r\n          setContent(response.data);\r\n          setContent((content) =>\r\n            content.filter((x) => x.email != currentUser.email)\r\n          );\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setContent(_content);\r\n\r\n          if (error.response && error.response.status === 401) {\r\n            EventBus.dispatch(\"logout\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"userlist-box\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-10 mx-auto\">\r\n            <div class=\"career-search mb-60\">\r\n              <form action=\"#\" class=\"career-form mb-60\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6 col-lg-3 my-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-lg btn-block btn-light btn-custom\"\r\n                      id=\"contact-submit\"\r\n                      onClick={() => {\r\n                        printUserList(1);\r\n                      }}\r\n                    >\r\n                      Java\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-3 my-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-lg btn-block btn-light btn-custom\"\r\n                      id=\"contact-submit\"\r\n                      onClick={() => {\r\n                        printUserList(2);\r\n                      }}\r\n                    >\r\n                      JavaScript\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-3 my-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-lg btn-block btn-light btn-custom\"\r\n                      id=\"contact-submit\"\r\n                      onClick={() => {\r\n                        printUserList(3);\r\n                      }}\r\n                    >\r\n                      Python\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-3 my-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-lg btn-block btn-light btn-custom\"\r\n                      id=\"contact-submit\"\r\n                      onClick={() => {\r\n                        printUserList(4);\r\n                      }}\r\n                    >\r\n                      HTML/CSS\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-3 my-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-lg btn-block btn-light btn-custom\"\r\n                      id=\"contact-submit\"\r\n                      onClick={() => {\r\n                        printUserList(5);\r\n                      }}\r\n                    >\r\n                      C#\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-3 my-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-lg btn-block btn-light btn-custom\"\r\n                      id=\"contact-submit\"\r\n                      onClick={() => {\r\n                        printUserList(6);\r\n                      }}\r\n                    >\r\n                      SQL\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-3 my-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-lg btn-block btn-light btn-custom\"\r\n                      id=\"contact-submit\"\r\n                      onClick={() => {\r\n                        printUserList(7);\r\n                      }}\r\n                    >\r\n                      All\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n\r\n              {content.map((n, i) => {\r\n                return (\r\n                  <UserList\r\n                    key={i}\r\n                    name={n.fullName}\r\n                    location={n.city}\r\n                    country={n.country}\r\n                    contacts={n.contacts}\r\n                    skill={n.skills}\r\n                    userId={currentUser.id}\r\n                    friendId={n.id}\r\n                    a={1}\r\n                    btntext=\"Add Friend\"\r\n                  >\r\n                    {\" \"}\r\n                  </UserList>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Home.js",["83","84"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Login.js",["85"],"import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Logo from \"../images/logo.png\";\r\nimport \"./Auth.css\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          navigate(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <img className=\"logo\" src={Logo}></img>\r\n      <div className=\"box-container\">\r\n        <h1 className=\"label_text\">Sign In</h1>\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-box\">\r\n            <div className=\"form-group\">\r\n              <label className=\"label_text\" htmlFor=\"username\">\r\n                Username\r\n              </label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                placeholder=\"User name\"\r\n                value={username}\r\n                onChange={onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"label_text\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                {loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Sign in</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Register.js",["86"],"import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport Logo from \"../images/logo.png\";\r\nimport \"./Auth.css\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeFullName = (e) => {\r\n    const fullName = e.target.value;\r\n    setFullName(fullName);\r\n  };\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.register(fullName, username, email, password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <img className=\"logo\" src={Logo}></img>\r\n\r\n      <div className=\"box-container\">\r\n        <h1 id=\"head_text\" className=\"label_text\">\r\n          Sign Up\r\n        </h1>\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div className=\"form-box\">\r\n              <div className=\"form-group\">\r\n                <label className=\"label_text\" htmlFor=\"fullName\">\r\n                  Full name*\r\n                </label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Full name\"\r\n                  name=\"fullname\"\r\n                  value={fullName}\r\n                  onChange={onChangeFullName}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"label_text\" htmlFor=\"username\">\r\n                  User name*\r\n                </label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"User name\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"label_text\" htmlFor=\"email\">\r\n                  Email*\r\n                </label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"label_text\" htmlFor=\"password\">\r\n                  Password*\r\n                </label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Profile.js",["87","88","89","90"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\auth.service.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\common\\EventBus.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\user.service.js",["91","92"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\auth-header.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Navbar.js",["93","94","95","96","97","98","99"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\TypeText.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\UserList.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\BoardUserFriends.js",["100"],{"ruleId":"101","severity":1,"message":"102","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":14},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"101","severity":1,"message":"109","line":2,"column":25,"nodeType":"103","messageId":"104","endLine":2,"endColumn":29},{"ruleId":"101","severity":1,"message":"110","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":18,"column":43,"nodeType":"113","messageId":"114","endLine":18,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":42,"column":43,"nodeType":"113","messageId":"114","endLine":42,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":66,"column":43,"nodeType":"113","messageId":"114","endLine":66,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":90,"column":43,"nodeType":"113","messageId":"114","endLine":90,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":114,"column":43,"nodeType":"113","messageId":"114","endLine":114,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":138,"column":43,"nodeType":"113","messageId":"114","endLine":138,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":162,"column":43,"nodeType":"113","messageId":"114","endLine":162,"endColumn":45},{"ruleId":"101","severity":1,"message":"115","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":11,"column":7,"nodeType":"118","endLine":11,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":74,"column":7,"nodeType":"118","endLine":74,"endColumn":40},{"ruleId":"116","severity":1,"message":"117","line":112,"column":7,"nodeType":"118","endLine":112,"endColumn":40},{"ruleId":"101","severity":1,"message":"119","line":7,"column":3,"nodeType":"103","messageId":"104","endLine":7,"endColumn":8},{"ruleId":"101","severity":1,"message":"120","line":11,"column":3,"nodeType":"103","messageId":"104","endLine":11,"endColumn":9},{"ruleId":"101","severity":1,"message":"121","line":12,"column":3,"nodeType":"103","messageId":"104","endLine":12,"endColumn":6},{"ruleId":"122","severity":1,"message":"123","line":212,"column":6,"nodeType":"124","endLine":212,"endColumn":14,"suggestions":"125"},{"ruleId":"101","severity":1,"message":"126","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":84,"column":3,"nodeType":"129","messageId":"114","endLine":84,"endColumn":20},{"ruleId":"101","severity":1,"message":"130","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"101","severity":1,"message":"131","line":2,"column":18,"nodeType":"103","messageId":"104","endLine":2,"endColumn":23},{"ruleId":"101","severity":1,"message":"132","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":13},{"ruleId":"101","severity":1,"message":"133","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":16},{"ruleId":"101","severity":1,"message":"134","line":10,"column":8,"nodeType":"103","messageId":"104","endLine":10,"endColumn":12},{"ruleId":"101","severity":1,"message":"135","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":15},{"ruleId":"101","severity":1,"message":"136","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":17},{"ruleId":"122","severity":1,"message":"137","line":32,"column":6,"nodeType":"124","endLine":32,"endColumn":15,"suggestions":"138"},"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'Link' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Badge' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'skillData'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'AuthService' is defined but never used.","no-dupe-keys","Duplicate key 'getUsersBySkillPy'.","ObjectExpression","'Routes' is defined but never used.","'Route' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Home' is defined but never used.","'Profile' is defined but never used.","'BoardUser' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser.id'. Either include it or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [skillData, toggle]",{"range":"147","text":"148"},"Update the dependencies array to be: [content, currentUser.id]",{"range":"149","text":"150"},[4963,4971],"[skillData, toggle]",[932,941],"[content, currentUser.id]"]