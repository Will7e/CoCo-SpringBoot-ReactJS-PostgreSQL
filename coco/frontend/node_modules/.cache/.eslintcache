[{"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\index.js":"1","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\App.js":"2","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\BoardUser.js":"4","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Home.js":"5","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Login.js":"6","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Register.js":"7","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Profile.js":"8","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\auth.service.js":"9","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\common\\EventBus.js":"10","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\user.service.js":"11","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\auth-header.js":"12","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Navbar.js":"13","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\TypeText.js":"14"},{"size":314,"mtime":1649977728939,"results":"15","hashOfConfig":"16"},{"size":967,"mtime":1649976640155,"results":"17","hashOfConfig":"16"},{"size":5227,"mtime":1649576976070,"results":"18","hashOfConfig":"16"},{"size":1551,"mtime":1650283016445,"results":"19","hashOfConfig":"16"},{"size":636,"mtime":1650058577263,"results":"20","hashOfConfig":"16"},{"size":3786,"mtime":1650136071524,"results":"21","hashOfConfig":"16"},{"size":5857,"mtime":1649982020113,"results":"22","hashOfConfig":"16"},{"size":6722,"mtime":1650287072009,"results":"23","hashOfConfig":"16"},{"size":849,"mtime":1650023812038,"results":"24","hashOfConfig":"16"},{"size":340,"mtime":1649576976063,"results":"25","hashOfConfig":"16"},{"size":1856,"mtime":1650311893435,"results":"26","hashOfConfig":"16"},{"size":260,"mtime":1650238927201,"results":"27","hashOfConfig":"16"},{"size":2484,"mtime":1650025627017,"results":"28","hashOfConfig":"16"},{"size":203,"mtime":1650055879731,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ylix9f",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\index.js",[],["64","65"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\App.js",["66"],"import React from \"react\";\r\nimport { Routes, Route, Link, BrowserRouter } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Register from \"./components/Register\";\r\nimport Login from \"./components/Login\";\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport BoardUser from \"./components/BoardUser\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Navbar></Navbar>\r\n      </div>\r\n      <div className=\"App\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n          <Route path=\"/user\" element={<BoardUser />} />\r\n        </Routes>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\BoardUser.js",["67","68"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Home.js",["69","70"],"import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport HomeImage from \"../images/home.jpg\";\r\n\r\nimport \"./Home.css\";\r\nimport TypeText from \"./TypeText\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <img className=\"home-image\" src={HomeImage}></img>\r\n      <div class=\"centered\">\r\n        <h1>\r\n          <TypeText typing={1} text={\"Coder Connect\"} />{\" \"}\r\n        </h1>\r\n        <div class=\"center2\">\r\n          <h3>\r\n            <TypeText typing={2} text={\"Welcome to our community\"} />{\" \"}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Login.js",["71"],"import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Logo from \"../images/logo.png\";\r\nimport \"./Auth.css\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          navigate(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <img className=\"logo\" src={Logo}></img>\r\n      <div className=\"box-container\">\r\n        <h1 className=\"label_text\">Sign In</h1>\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-box\">\r\n            <div className=\"form-group\">\r\n              <label className=\"label_text\" htmlFor=\"username\">\r\n                Username\r\n              </label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                placeholder=\"User name\"\r\n                value={username}\r\n                onChange={onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"label_text\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                {loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Sign in</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Register.js",["72"],"import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport Logo from \"../images/logo.png\";\r\nimport \"./Auth.css\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeFullName = (e) => {\r\n    const fullName = e.target.value;\r\n    setFullName(fullName);\r\n  };\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.register(fullName, username, email, password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <img className=\"logo\" src={Logo}></img>\r\n\r\n      <div className=\"box-container\">\r\n        <h1 id=\"head_text\" className=\"label_text\">\r\n          Sign Up\r\n        </h1>\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div className=\"form-box\">\r\n              <div className=\"form-group\">\r\n                <label className=\"label_text\" htmlFor=\"fullName\">\r\n                  Full name*\r\n                </label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Full name\"\r\n                  name=\"fullname\"\r\n                  value={fullName}\r\n                  onChange={onChangeFullName}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"label_text\" htmlFor=\"username\">\r\n                  User name*\r\n                </label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"User name\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"label_text\" htmlFor=\"email\">\r\n                  Email*\r\n                </label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"label_text\" htmlFor=\"password\">\r\n                  Password*\r\n                </label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Profile.js",["73","74","75","76","77"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\auth.service.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\common\\EventBus.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\user.service.js",["78"],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\services\\auth-header.js",[],"C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\Navbar.js",["79","80","81","82","83","84","85"],"import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Navbar.css\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport Home from \"./Home\";\r\nimport Profile from \"./Profile\";\r\nimport BoardUser from \"./BoardUser\";\r\n\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nfunction Navbar() {\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n\r\n    EventBus.on(\"logout\", () => {\r\n      logOut();\r\n    });\r\n\r\n    return () => {\r\n      EventBus.remove(\"logout\");\r\n    };\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n\r\n    setCurrentUser(undefined);\r\n  };\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <Link to={\"/\"} className=\"navbar-brand\"></Link>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"company_name nav-item\">\r\n            <Link to={\"/home\"} className=\"nav-link\">\r\n              CODER CONNECT\r\n            </Link>\r\n          </li>\r\n\r\n          {currentUser && (\r\n            <li className=\"nav-page nav-item\">\r\n              <Link to={\"/user\"} className=\" nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </div>\r\n\r\n        {currentUser ? (\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav__button nav-item\">\r\n              <Link to={\"/profile\"} className=\"nav-link\">\r\n                My Profile\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav__button nav-item\">\r\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\r\n                Sign out\r\n              </a>\r\n            </li>\r\n          </div>\r\n        ) : (\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav__button login_button nav-item\">\r\n              <Link to={\"/login\"} className=\"nav-link\">\r\n                Sign in\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav__button nav-item\">\r\n              <Link to={\"/register\"} className=\"nav-link\">\r\n                Sign Up\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\WillE\\Desktop\\CoderConnect-SpringBoot\\coco\\frontend\\src\\components\\TypeText.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":25,"nodeType":"92","messageId":"93","endLine":2,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":15,"column":41,"nodeType":"96","messageId":"97","endLine":15,"endColumn":43},{"ruleId":"98","severity":1,"message":"99","line":33,"column":6,"nodeType":"100","endLine":33,"endColumn":8,"suggestions":"101"},{"ruleId":"90","severity":1,"message":"102","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":11,"column":7,"nodeType":"105","endLine":11,"endColumn":51},{"ruleId":"103","severity":1,"message":"104","line":74,"column":7,"nodeType":"105","endLine":74,"endColumn":40},{"ruleId":"103","severity":1,"message":"104","line":112,"column":7,"nodeType":"105","endLine":112,"endColumn":40},{"ruleId":"90","severity":1,"message":"106","line":5,"column":3,"nodeType":"92","messageId":"93","endLine":5,"endColumn":8},{"ruleId":"90","severity":1,"message":"107","line":9,"column":3,"nodeType":"92","messageId":"93","endLine":9,"endColumn":9},{"ruleId":"90","severity":1,"message":"108","line":10,"column":3,"nodeType":"92","messageId":"93","endLine":10,"endColumn":6},{"ruleId":"90","severity":1,"message":"109","line":20,"column":7,"nodeType":"92","messageId":"93","endLine":20,"endColumn":16},{"ruleId":"90","severity":1,"message":"110","line":46,"column":9,"nodeType":"92","messageId":"93","endLine":46,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":60,"column":3,"nodeType":"113","messageId":"97","endLine":60,"endColumn":20},{"ruleId":"90","severity":1,"message":"114","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"115","line":2,"column":18,"nodeType":"92","messageId":"93","endLine":2,"endColumn":23},{"ruleId":"90","severity":1,"message":"116","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":13},{"ruleId":"90","severity":1,"message":"117","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":16},{"ruleId":"90","severity":1,"message":"118","line":10,"column":8,"nodeType":"92","messageId":"93","endLine":10,"endColumn":12},{"ruleId":"90","severity":1,"message":"119","line":11,"column":8,"nodeType":"92","messageId":"93","endLine":11,"endColumn":15},{"ruleId":"90","severity":1,"message":"120","line":12,"column":8,"nodeType":"92","messageId":"93","endLine":12,"endColumn":17},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Badge' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'skillJava' is assigned a value but never used.","'toggler' is assigned a value but never used.","no-dupe-keys","Duplicate key 'getUsersBySkillPy'.","ObjectExpression","'Routes' is defined but never used.","'Route' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Home' is defined but never used.","'Profile' is defined but never used.","'BoardUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [currentUser.email]",{"range":"126","text":"127"},[959,961],"[currentUser.email]"]